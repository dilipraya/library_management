@model IEnumerable<LibraryManagement.Models.Book>

@{
    ViewBag.Title = "Search Book";
}
    

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-1">
        <h2>Book</h2>
        <ol class="breadcrumb">
            <li class="active">
                <strong>Search Book</strong>
            </li>
        </ol>
    </div>
    <div class="col-sm-11">
        @using (Html.BeginForm("Search", "BookSearch", FormMethod.Get))
            {
            @Html.ValidationSummary(false)
            <div class="col-md-12">
                <div class="ibox-content">
                    <div class="row">
                        <div class="col-md-8">
                            <input type="text" placeholder="Type Here..." class="form-control" name="search_name">
                            <small>Enter book title or author name or publisher name to Search.</small>
                            <br>
                            <label><input type="checkbox" class="i-checks" name="book_in_shelf"> Books in Shelf</label>
                        </div>
                        <div class="col-md-4">
                            <button type="submit" class="btn btn-primary block full-width m-b">Search Book</button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Books</h5>
                    <div class="ibox-tools">
                        <a class="collapse-link">
                            <i class="fa fa-chevron-up"></i>
                        </a>
                        <a class="close-link">
                            <i class="fa fa-times"></i>
                        </a>
                    </div>
                </div>
                <div class="ibox-content">

                    <table class="table table-striped table-bordered table-hover dataTables-example">
                        <thead>
                            <tr>
                                <th>S.N.</th>
                                <th>@Html.DisplayNameFor(model => model.title)</th>
                                <th>@Html.DisplayNameFor(model => model.standard_charge)</th>
                                <th>@Html.DisplayNameFor(model => model.penalty_charge)</th>
                                <th>Publisher Name</th>
                                <th>Book Copies</th>
                                <th>
                                    Authors
                                </th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
@{
    int counter = 1;
}
@foreach (var item in Model)
{
    <tr class="gradeX">
        <td>
            @(counter++)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.title)
        </td>

        <td>
            @Html.DisplayFor(modelItem => item.standard_charge)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.penalty_charge)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Publisher.name)
        </td>
        <td>
           @{  
               int bookCopyCount = item.BookCopies.Count();
               int bookCopyOnShelfCount = item.BookCopies.Where(x => x.loan_status == false).Count();
           }
            <div class="badge badge-primary">Book Copies: @(bookCopyCount)</div><br />
            <div class="badge badge-danger">On Shelf: @(bookCopyOnShelfCount)</div>
        </td>
        <td>
            @if (item.Authors != null)
            {
                foreach (var author in item.Authors)
                {
                    @Html.ActionLink(author.first_name + " " + author.last_name, "Details", "Author", new { id = author.authorID }, new { @class = "btn btn-default active btn-block btn-xs" })

                }
            }
        </td>
        <td>
            @Html.ActionLink("Loan", "Details", new { id = item.bookID }, new { @class = "btn btn-danger btn-sm" })
            @Html.ActionLink("Details", "Details", new { id = item.bookID }, new { @class = "btn btn-primary btn-sm" })
            @Html.ActionLink("Edit", "Edit", new { id = item.bookID }, new { @class = "btn btn-white btn-sm" })
            @Html.ActionLink("Delete", "Delete", new { id = item.bookID }, new { @class = "btn btn-white btn-sm" })
        </td>
    </tr>
}
                        </tbody>
                        <tfoot>
                            <tr>
                                <th>S.N.</th>
                                <th>@Html.DisplayNameFor(model => model.title)</th>
                                <th>@Html.DisplayNameFor(model => model.standard_charge)</th>
                                <th>@Html.DisplayNameFor(model => model.penalty_charge)</th>
                                <th>Publisher Name</th>
                                <th>
                                    Authors
                                </th>                                
                                <th>
                                    Book Copies
                                </th>
                                <th>Actions</th>
                            </tr>
                        </tfoot>
                    </table>

                </div>
            </div>
        </div>
    </div>
</div>
@section Styles {
    @Styles.Render("~/Content/plugins/dataTables")
}

@section Scripts {
    @Scripts.Render("~/plugins/jeditable")
    @Scripts.Render("~/plugins/dataTables")

    <script type="text/javascript">
        $(document).ready(function () {
            $(document).on("click", "[type='checkbox']", function (e) {
                if (this.checked) {
                    $(this).attr("value", "true");
                } else {
                    $(this).attr("value", "false");
                }
            });

            $('.dataTables-example').DataTable({
                dom: '<"html5buttons"B>lTfgitp',
                buttons: [
                    { extend: 'copy' },
                    { extend: 'csv' },
                    { extend: 'excel', title: 'ExampleFile' },
                    { extend: 'pdf', title: 'ExampleFile' },

                    {
                        extend: 'print',
                        customize: function (win) {
                            $(win.document.body).addClass('white-bg');
                            $(win.document.body).css('font-size', '10px');

                            $(win.document.body).find('table')
                                    .addClass('compact')
                                    .css('font-size', 'inherit');
                        }
                    }
                ]

            });

            /* Init DataTables */
            var oTable = $('#editable').dataTable();

            /* Apply the jEditable handlers to the table */
            oTable.$('td').editable( '../example_ajax.php', {
                "callback": function( sValue, y ) {
                    var aPos = oTable.fnGetPosition( this );
                    oTable.fnUpdate( sValue, aPos[0], aPos[1] );
                },
                "submitdata": function ( value, settings ) {
                    return {
                        "row_id": this.parentNode.getAttribute('id'),
                        "column": oTable.fnGetPosition( this )[2]
                    };
                },

                "width": "90%",
                "height": "100%"
            } );


        });

        function fnClickAddRow() {
            $('#editable').dataTable().fnAddData( [
                "Custom row",
                "New row",
                "New row",
                "New row",
                "New row" ] );

        }
    </script>
    }


